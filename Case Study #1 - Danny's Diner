   ## Case Study Questions
--   --------------------*/

-- DONE ON MYSQL WORKBENCH
https://8weeksqlchallenge.com/case-study-1/

-- 1. What is the total amount each customer spent at the restaurant?

SELECT 
    s.customer_id, SUM(m.price) total_spent
FROM
    sales s
        JOIN
    menu m ON s.product_id = m.product_id
GROUP BY s.customer_id;

-- 2. How many days has each customer visited the restaurant?

SELECT 
    customer_id, COUNT(DISTINCT order_date)
FROM
    sales
GROUP BY customer_id;

-- 3. What was the first item from the menu purchased by each customer?

with item_rank as (select customer_id, s.product_id, rank() over (partition by customer_id order by order_date asc) as purchase_number, product_name from sales s join menu m on m.product_id = s.product_id)
select customer_id, product_id, purchase_number, product_name from item_rank
where purchase_number = 1;

with item_rank as (select customer_id, s.product_id, row_number() over (partition by customer_id order by order_date asc) as purchase_number, product_name from sales s join menu m on m.product_id = s.product_id)
select customer_id, product_id, purchase_number, product_name from item_rank
where purchase_number = 1;

-- 4. What is the most purchased item on the menu and how many times was it purchased by all customers?

SELECT 
    s.product_id, product_name, COUNT(s.product_id) AS count
FROM
    sales s
        JOIN
    menu m ON m.product_id = s.product_id
GROUP BY s.product_id
ORDER BY count DESC
LIMIT 1;


-- 5. Which item was the most popular for each customer?

select customer_id, product_id, ranking from (select customer_id, product_id, rank() over (partition by customer_id order by count(*) desc) as ranking from sales group by customer_id, product_id) temp
where ranking = 1;

--
-- 6. Which item was purchased first by the customer after they became a member?

select customer_id, product_name, order_date from 
(select s.customer_id, s.product_id, product_name, order_date, join_date, rank() over (partition by customer_id order by order_date asc) as ranking 
from sales s 
join members m on s.customer_id = m.customer_id 
join menu me on s.product_id = me.product_id
where order_date >= join_date
order by order_date asc) temp
where ranking =1;

-- 7. Which item was purchased just before the customer became a member?

#option 1: if more than one item int he same day show both
select customer_id, product_name, order_date from 
(select s.customer_id, s.product_id, product_name, order_date, join_date, rank() over (partition by customer_id order by order_date desc) as ranking 
from sales s 
join members m on s.customer_id = m.customer_id 
join menu me on s.product_id = me.product_id
where order_date < join_date
order by order_date asc) temp
where ranking =1;

#option 2: select just one item
select customer_id, product_name, order_date from 
(select s.customer_id, s.product_id, product_name, order_date, join_date, row_number() over (partition by customer_id order by order_date desc) as ranking 
from sales s 
join members m on s.customer_id = m.customer_id 
join menu me on s.product_id = me.product_id
where order_date < join_date
order by order_date asc) temp
where ranking =1;

-- 8. What is the total items and amount spent for each member before they became a member?

SELECT 
    s.customer_id,
    COUNT(s.product_id) AS total_items,
    SUM(price) AS total_spent
FROM
    sales s
        JOIN
    members m ON s.customer_id = m.customer_id
        JOIN
    menu men ON s.product_id = men.product_id
WHERE
    order_date < join_date
GROUP BY s.customer_id
ORDER BY customer_id ASC;




-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

SELECT 
    s.customer_id, SUM(points) AS total_pts
FROM
    sales s
        JOIN
    (SELECT 
        *,
            CASE
                WHEN product_name = 'sushi' THEN price * 20
                ELSE price * 10
            END AS points
    FROM
        menu) temp ON s.product_id = temp.product_id
        JOIN
    members m ON s.customer_id = m.customer_id
WHERE
    order_date >= join_date
GROUP BY customer_id
ORDER BY customer_id ASC;


-- 10. In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi 
-- how many points do customer A and B have at the end of January?


with temp2 as(with temp as (select s.*, mb.join_date, date_add(mb.join_date, interval 7 day) as one_week_after from sales s join members mb on s.customer_id = mb.customer_id)
select t.*, case when order_date < join_date then 0 when order_date >= join_date and order_date <= one_week_after then 20 when order_date > '2021-01-31' then 0 else 10 end as after_check, m.price from temp t join menu m on t.product_id = m.product_id)
select customer_id, sum(price*after_check) from temp2
group by customer_id;
